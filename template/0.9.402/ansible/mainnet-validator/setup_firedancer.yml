---
- name: Setup Firedancer
  hosts: all
  become: yes
  become_user: solv
  vars:
    target_file: /home/solv/firedancer/src/app/fdctl/run/run_agave.c
  vars_files:
    - ~/.slv/versions.yml
  tasks:
    - name: Clone Firedancer repository
      git:
        repo: https://github.com/firedancer-io/firedancer.git
        dest: /home/solv/firedancer
        update: yes
        force: yes
        version: v{{ mainnet_validators.version_firedancer }}

    - name: Initialize git submodules
      command: git submodule update --init --recursive
      args:
        chdir: /home/solv/firedancer
      retries: 3
      delay: 10

    - name: Generate overrides.yml from template
      template:
        src: ~/.slv/mainnet-validator/overrides.yml.j2
        dest: /home/solv/overrides.yml
        mode: "0755"
        owner: solv
        group: solv
      vars:
        staked_rpc_identity_account: "{{ hostvars[inventory_hostname].staked_rpc_identity_account }}"
        staked_rpc_amount: "{{ hostvars[inventory_hostname].staked_rpc_amount }}"
      failed_when: false

    - name: Run deps.sh script with yes (async/poll)
      shell: |
        yes y | ./deps.sh
      args:
        chdir: /home/solv/firedancer
      async: 300 # wait for 5 minutes
      poll: 15 # check every 15 seconds
      register: deps_result
      until: deps_result.rc == 0
      retries: 3
      delay: 10

    - name: Build Firedancer with make
      shell: |
        export PATH="$HOME/.cargo/bin:$PATH"
        . $HOME/.cargo/env
        make -j fdctl solana
      args:
        chdir: /home/solv/firedancer
        executable: /bin/bash
      register: build_result
      until: build_result.rc == 0
      retries: 3
      delay: 10

    - name: Create symbolic link for fdctl
      file:
        src: /home/solv/firedancer/build/native/gcc/bin/fdctl
        dest: /usr/local/bin/fdctl
        state: link
      become: yes
      become_user: root

    - name: Get Shreds IP by curl
      shell: |
        curl -X 'GET' \
          https://ip.shredstream.cc/?ip={{ ansible_host }} \
          -H 'accept: application/json' \
          -H 'Authorization: Bearer solvers' | jq -r '.ip'
      register: get_shreds_ip
      failed_when: false

    - name: Set Shreds IP with default (including empty string)
      set_fact:
        shreds_ip: "{{ (get_shreds_ip.stdout | default('')) | trim or '84.32.220.90' }}"

    - name: Create config.toml
      template:
        src: ~/.slv/mainnet-validator/firedancer-config.toml.j2
        dest: /home/solv/firedancer-config.toml
        owner: solv
        group: solv
        mode: "0644"
      vars:
        block_engine_region: "{{ hostvars[inventory_hostname].block_engine_region }}"
        vote_account: "{{ hostvars[inventory_hostname].vote_account }}"
        commission_bps: "{{ hostvars[inventory_hostname].commission_bps }}"

    - name: Create Firedancer systemd service file with template
      template:
        src: ~/.slv/mainnet-validator/firedancer.service.j2
        dest: /etc/systemd/system/firedancer.service
        owner: root
        group: root
        mode: "0644"
        force: yes
      become: yes
      become_user: root
      register: firedancer_service
      notify: Reload systemd daemon

    - name: Enable Firedancer
      systemd:
        name: firedancer
        enabled: yes
      become: yes
      become_user: root

    - name: Ensure /mnt directory has correct permissions
      shell: sudo chown -R solv:solv /mnt && sudo chmod -R 700 /mnt
      failed_when: false

  handlers:
    - name: Reload systemd daemon
      command: systemctl daemon-reload
      become: yes
      become_user: root
